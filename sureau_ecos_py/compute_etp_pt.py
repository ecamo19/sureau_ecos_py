# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_compute_etp_pt.ipynb.

# %% auto 0
__all__ = ['compute_etp_pt']

# %% ../nbs/01_compute_etp_pt.ipynb 3
import numpy as np

# %% ../nbs/01_compute_etp_pt.ipynb 4
def compute_etp_pt(
    tmoy: float,  # Mean temperature over the considered time step (degrees Celsius)
    net_radiation: float,  # Cumulative Net radiation over the considered  time sep  (MJ.m2)
    pt_coeff: float = 1.26,  # An empirical constant accounting for the vapor pressure deficit and resistance values Typically, Î± is 1.26 for open bodies of water, but has a wide range of values from less than 1 (humid conditions) to almost 2 (arid conditions).
    g: float = 0, # Unknown parameter definition
)-> float:
    "Calcule Potential evapotranspiration (mm) `PET` using Pristeley Taylor Formulation"

    # Constants -----------------------------------------------------------------

    # Stefan-Boltzman constant [MJ.K^-4.m^-2.day^-1]
    # sb_constant = 4.903 * 10**9

    # Psychometer constant
    gamma = 0.0666

    # Latent heat of vaporisation
    lamb = 2.45

    # Compute ETP -------------------------------------------------------------

    #  s: slope of the saturation vapour pressure function (AO 1998)
    slope_sta = (
        4098 * 0.6108 * np.exp((17.27 * tmoy) / (tmoy + 237.3)) / ((tmoy + 237.3) ** 2)
    )
    # s <-       4098 * 0.6108 * exp((17.27 * Tmoy) / (Tmoy + 237.3)) / ((Tmoy + 237.3)^2)

    etp = pt_coeff * (slope_sta / (slope_sta + gamma)) * ((net_radiation - g) / lamb)
    # ETP <- PTcoeff * (s / (s + gamma)) * ((NetRadiation - G) / lambda)

    return etp
