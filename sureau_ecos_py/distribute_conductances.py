# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/10_13_compute_hydraulic_conductances.ipynb.

# %% auto 0
__all__ = ['distribute_conductances']

# %% ../nbs/10_13_compute_hydraulic_conductances.ipynb 3
import collections
from typing import Dict

# %% ../nbs/10_13_compute_hydraulic_conductances.ipynb 4
def distribute_conductances(k_plant_init: float, # Conductance of the plant from root to leaf
                            ri:float, # Root distribution within the soil layers.
                            frac_leaf_sym:float = 0.4 # Proportion of k_plant_init assigned to the leaf (apoplasm to symplasm pathway)
                            ) -> Dict:

        "Calcultate hydraulic conductances in the different portions of the plant (trunk, leaf and root) according to predetermined rules"

        frac_rt = (2/3)*(1-frac_leaf_sym)

        fract_tl = (1/3)*(1-frac_leaf_sym)

        k_rsapo_init   = 1 /(frac_rt / k_plant_init) * ri

        k_slapo_init = 1/(fract_tl/k_plant_init)

        k_lsym_init = 1/(frac_leaf_sym/k_plant_init)

        # TODO: AJOUTE UN CALCUL DES CONDUCTANCE ICI POUR CHECK DU CALCUL? e.g.:
        # k_PlantInit <-  1/ (1 /sum(k_RSApoInit) + 1/k_SLApoInit + 1/k_LSymInit)

        dictionary = {"k_slapo_init": k_slapo_init,
                          "k_lsym_init": k_lsym_init,
                          "k_rsapo_init": k_rsapo_init,
                          "k_plant_init": k_plant_init}



        return collections.defaultdict(list,dictionary)


