# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_compute_vpd.ipynb.

# %% auto 0
__all__ = ["compute_vpd_from_t_rh"]

# %% ../nbs/00_compute_vpd.ipynb 3
import numpy as np


# %% ../nbs/00_compute_vpd.ipynb 4
def compute_vpd_from_t_rh(
    relative_humidity: float,  # Air `relative_humidity` (%)
    temperature: float,  # Air `temperature` (degrees Celsius)
    air_pressure: float = 101325,
):  # Air `pressure`, used?
    "Compute vapor pressure deficit (VPD) from air `relative humidity` and \
     air `temperature`"

    # Constants ---------------------------------------------------------------

    # molar weight dry air (g/mol)
    mass = 28.966

    # molar weight H20 H2O(g/mol) Mh2o not used in this function??
    mass_h2o = 18

    # Perfect gas constant %J/mol/K
    rgz = 8.314472

    # conversion of temperature in K
    temp_kelvin = temperature + 273.15

    # D_air not used in this function??
    d_air = ((air_pressure) / (rgz * (temp_kelvin))) * mass

    # Compute VPD -------------------------------------------------------------
    es = 6.108 * np.exp(17.27 * temperature / (237.2 + temperature)) * 100

    ea = relative_humidity * es / 100

    vpd = (es - ea) / 1000

    if vpd < 0:
        vpd = 0

    return vpd
